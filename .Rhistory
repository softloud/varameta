library(varameta)
library(varameta)
library(varameta)
library(varameta)
library(varameta)
library(varameta)
library(varameta)
usethis::use_test("neet")
?bland_mean
library(varameta)
?bland_mean
?bland_mean
library(varameta)
?bland_mean
vignette("rd")
library(varameta)
vignette("rd")
simeta::metasims()
library(simeta)
library(testtht)
library(testthat)
?gexp
??gexp
?g_exp
library(varameta)
?g_exp
g_exp(3, 5)
varameta:::g_exp(3,5)
library(varameta)
varameta::g_exp(3,5)
varameta:::g_exp(3,5)
varameta:::g_exp(3,5) == Inf
?g_cauchy
vignette("rd")
library(varameta)
library(varameta)
?g_
?g_cauchy
vignette("rd")
library(varameta)
?g_cauchy
?g_cauchy
library(varameta)
?g_cauchy
?g_exp
library(varameta)
?g_exp
?g_exp
?g_cauchy
library(varameta)
library(varameta)
?wan_mean_C1
library(varameta)
?bland_se
library(varameta)
panda("There are days where documentation is oddly satisfying.")
knitr::opts_chunk$set(echo = TRUE)
demo_sim <- metasims()
library(simeta)
demo_sim <- metasims()
?metasims()
sims %>% objects()
demo_sim %>% objects()
demo_sim$arguments
# packages
library(simeta)
library(tidyverse)
# make a table of
demo_sim %>%
pluck("arguments")
# make a table of
demo_sim %>%
pluck("arguments") %>%
kableExtra::kable()
demo_sim %>%
pluck("arguments")
demo_sim %>%
pluck("distributions")
?simeta
demo_sim %>%
pluck("distributions") %>%
mutate(dist_fn = map(dist, .f = function(x) {
paste0("d", x) %>% get()
}))
?dpareto
# packages
library(simeta)
library(actuar)
library(tidyverse)
demo_sim %>%
pluck("distributions") %>%
mutate(dist_fn = map(dist, .f = function(x) {
paste0("d", x) %>% get()
}))
?stat_fun
library(ggplot2)
?stat_fun
?stat_function
ggplot(aes(x = c(0, 1)))
tibble(x = c(0,1)) %>%
ggplot(aes(x = x)) +
stat_function(fun = rnorm, args = list(mean = 3, sd = 0.2))
tibble(x = c(0,1)) %>%
ggplot(aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = 3, sd = 0.2))
tibble(x = c(0,1)) %>%
ggplot(aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = 0.5, sd = 0.2))
fns <- demo_sim %>%
pluck("distributions") %>%
mutate(dist_fn = map(dist, .f = function(x) {
paste0("d", x) %>% get()
}))
fns
print(x,y)
map2_df(fns$dist, fns$par, .f = function(x,y) {
print(x,y)
})
map2_df(fns$dist, fns$par, .f = function(x,y) {
print(x)
})
map2_df(fns$dist, fns$par, .f = function(x,y) {
print(x)
})
map2_df(fns$dist, fns$par, .f = function(x,y) {
cat(x)
})
seq(1:10)
seq(1:10)
?simeta
map2_df(fns$dist_fn, fns$par, .f = function(dist, par) {
tibble(
x = seq(1:10)
) %>%
mutate(y = density_fn(x,
distribution = dist,
parameters = par))
})
map2(fns$dist_fn, fns$par, .f = function(dist, par) {
tibble(
x = seq(1:10)
) %>%
mutate(y = density_fn(x,
distribution = dist,
parameters = par))
})
map2(fns$dist_fn, fns$par, .f = function(dist, par) {
tibble(
x = seq(1:10)
) %>%
mutate(y = density_fn(x,
distribution = dist,
parameters = par,
type = "d"))
})
map2(fns$dist_fn, fns$par, .f = function(dist, par) {
tibble(
x = seq(1:10)
) %>%
mutate(y = density_fn(x,
distribution = dist,
parameters = par,
type = "d"))
})
map2(fns$dist_fn, fns$par, .f = function(dist, par) {
tibble(
x = seq(1:10)
) %>%
mutate(y = density_fn(x,
distribution = dist,
parameters = par,
type = "d"))})
fns
fns %>%
slice(1)
?density_fn
fns$dist_fn
fns
?map2
distns <- demo_sim %>%
pluck("distributions")
distributions <- demo_sim %>%
pluck("distributions")
distributions
distributions %>% {
map2(.$dist, .$par,
.f = function(d, p) {
density_fn(0.5, d, p, "d")
})
}
?density_fn
library(varameta)
knitr::opts_chunk$set(echo = TRUE)
distributions %>% {
map2(.$dist, .$par,
.f = function(d, p) {
density_fn(0.5, d, p, "d")
})
}
